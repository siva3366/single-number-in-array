class Solution(object):
    def isValid(self, s):
        stack=Stack()
        opening='({['
        closing=')}]'
        if s=="":
            return True
        if len(s)<2:
            return False
        for i in s:
            if i in closing and not stack.is_empty():
                popped=stack.pop()
                closing_index=closing.index(i)
                opening_index=opening.index(popped)
                if opening_index!=closing_index:
                    return False
            else:
                stack.push(i)
            if stack.is_empty():
                return True
            return False
        
class Stack:
    def __init__(self):
        self.stack=[]
    def push(self, item):
        self.stack.append(item)
    def pop(self):
        return self.stack.pop()
    def peek(self):
        return self.stack[len(self.stack)-1]
    def size(self):
        return len(self.stack)
    def is_empty(self):
        return len(self.stack)==0